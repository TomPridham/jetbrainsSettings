<templateSet group="Angular2">
  <template name="ng2-component" value="import {Component} from '@angular/core';&#10;&#10;@Component({&#10;    selector: '$SELECTOR$',&#10;    template: ``,&#10;    styles  :[]&#10;})&#10;export class $COMPONENT_NAME$Component{&#10;    constructor() { }&#10;&#10;    $END$&#10;}" description="Angular2 component" toReformat="false" toShortenFQNames="true">
    <variable name="SELECTOR" expression="" defaultValue="&quot;selector&quot;" alwaysStopAt="true" />
    <variable name="COMPONENT_NAME" expression="capitalize(String)" defaultValue="&quot;ComponentName&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-component-root" value="import { Component } from '@angular/core';&#10;&#10;@Component({&#10;    selector: '$SELECTOR$',&#10;    template:  &#10;        `&lt;router-outlet&gt;&lt;/router-outlet&gt;`&#10;})&#10;export class $NAME$Component { }&#10;$END$" description="Angular2 root component" toReformat="false" toShortenFQNames="true">
    <variable name="SELECTOR" expression="" defaultValue="&quot;selector&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-service" value="import {Injectable} from '@angular/core';&#10;&#10;@Injectable()&#10;export class $SERVICE_NAME$Service {&#10;&#10;    constructor($END$) { }&#10;&#10;}" description="Angular2 service" toReformat="false" toShortenFQNames="true">
    <variable name="SERVICE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-module" value="import {NgModule} from '@angular/core';&#10;&#10;import {$COMPONENT_NAME$Component} from './$NAME$.component';&#10;&#10;@NgModule({&#10;    imports: [],&#10;    exports: [],&#10;    declarations: [$COMPONENT_NAME$Component],&#10;    providers: [],&#10;})&#10;export class $COMPONENT_NAME$Module { }&#10;$END$" description="Angular 2 module" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="lowercaseAndDash(COMPONENT_NAME)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ng2-test" value="import {TestBed, async} from '@angular/core/testing';&#10;import {$VAR$} from './$file$';&#10;&#10;describe('$VAR$', () =&gt; {&#10;    let fixture;&#10;    beforeEach(() =&gt; {&#10;        TestBed.configureTestingModule({&#10;            declarations: [&#10;                $VAR$&#10;            ],&#10;        });&#10;        fixture = TestBed.createComponent($VAR$);&#10;    });&#10;&#10;    it('should exist', async(() =&gt; {&#10;        const $comp$ = fixture.debugElement.componentInstance;&#10;        expect($comp$).toBeTruthy();&#10;    }));&#10;});" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="file" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <variable name="comp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="providers" value="providers: [&#10;    {provide: $VAR$, useClass: $VAR$Mock}&#10;]" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="provide" value="{provide: $VAR$, useClass: $VAR$Mock}" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="MockComponent" value="MockComponent({selector: '$VAR$', inputs: ['$VAR2$']})" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>